<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jumstc.bcc.domain.mapper.authConfig.MaterialMapper">

    <resultMap id="BaseResultMap" type="com.jumstc.bcc.domain.entity.authConfig.Material">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="content_ids" jdbcType="VARCHAR" property="contentIds"/>
        <result column="inputs_info_str" jdbcType="VARCHAR" property="inputsInfoStr"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
        <result column="valid" jdbcType="INTEGER" property="valid"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="create_user_name" jdbcType="VARCHAR" property="createUserName"/>
        <result column="create_user_code" jdbcType="VARCHAR" property="createUserCode"/>
        <result column="update_user_name" jdbcType="VARCHAR" property="updateUserName"/>
        <result column="update_user_code" jdbcType="VARCHAR" property="updateUserCode"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, `name`, content_ids, inputs_info_str, remark, `valid`, create_time, update_time,
        create_user_name, create_user_code, update_user_name, update_user_code
    </sql>

    <sql id="list_Page_where">
        where valid = 1
        <if test="model.name !=null and model.name !=''">
            and name like concat('%', #{model.name}, '%')
        </if>
        <if test="model.materialIds !=null and model.materialIds.size() > 0">
            and id in
          <foreach collection="model.materialIds" open="(" close=")" separator="," item="item">
              #{item}
          </foreach>
        </if>
        <if test="model.updateUserName !=null and model.updateUserName !=''">
            and update_user_name like concat('%', #{model.updateUserName}, '%')
        </if>
    </sql>

    <select id="selectByPrimaryKey" parameterType="long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_bcc_material
        where id = #{id,jdbcType=BIGINT}
    </select>

    <select id="queryListByParam" resultType="com.jumstc.bcc.domain.entity.authConfig.Material">
        select
        <include refid="Base_Column_List"/>
        from t_bcc_material
        <include refid="list_Page_where"/>
        order by update_time desc limit #{startPos}, #{pageSize}
    </select>

    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.jumstc.bcc.domain.entity.authConfig.Material"
            useGeneratedKeys="true">
        insert into t_bcc_material
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null">
                `name`,
            </if>
            <if test="contentIds != null">
                content_ids,
            </if>
            <if test="inputsInfoStr != null">
                inputs_info_str,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="valid != null">
                `valid`,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="createUserName != null">
                create_user_name,
            </if>
            <if test="createUserCode != null">
                create_user_code,
            </if>
            <if test="updateUserName != null">
                update_user_name,
            </if>
            <if test="updateUserCode != null">
                update_user_code,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="contentIds != null">
                #{contentIds,jdbcType=VARCHAR},
            </if>
            <if test="inputsInfoStr != null">
                #{inputsInfoStr,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="valid != null">
                #{valid,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createUserName != null">
                #{createUserName,jdbcType=VARCHAR},
            </if>
            <if test="createUserCode != null">
                #{createUserCode,jdbcType=VARCHAR},
            </if>
            <if test="updateUserName != null">
                #{updateUserName,jdbcType=VARCHAR},
            </if>
            <if test="updateUserCode != null">
                #{updateUserCode,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.jumstc.bcc.domain.entity.authConfig.Material">
        update t_bcc_material
        <set>
            <if test="name != null">
                `name` = #{name,jdbcType=VARCHAR},
            </if>
            <if test="contentIds != null">
                content_ids = #{contentIds,jdbcType=VARCHAR},
            </if>
            <if test="inputsInfoStr != null">
                inputs_info_str = #{inputsInfoStr,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="valid != null">
                `valid` = #{valid,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createUserName != null">
                create_user_name = #{createUserName,jdbcType=VARCHAR},
            </if>
            <if test="createUserCode != null">
                create_user_code = #{createUserCode,jdbcType=VARCHAR},
            </if>
            <if test="updateUserName != null">
                update_user_name = #{updateUserName,jdbcType=VARCHAR},
            </if>
            <if test="updateUserCode != null">
                update_user_code = #{updateUserCode,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <!--查询总条数-->
    <select id="queryCount" resultType="int">
        select
        count(1)
        from t_bcc_material t
        <include refid="list_Page_where"/>
    </select>

    <!--根据名字精确查询认证材料-->
    <select id="queryByName" resultType="com.jumstc.bcc.domain.entity.authConfig.Material">
        select * from `t_bcc_material` t where t.name = #{name}
        <if test="id != null">and t.id != #{id}</if>
    </select>

    <!--根据列表id查询认证内容列表-->
    <select id="queryListByIds" resultType="com.jumstc.bcc.domain.entity.authConfig.Material">
        select * from `t_bcc_material` t where t.id in
        <foreach collection="list" open="(" close=")" separator="," item="item">
            #{item}
        </foreach>
    </select>

    <!--根据名称模糊查询认证材料列表-->
    <select id="queryListByName" resultType="com.jumstc.bcc.dto.response.authConfig.MaterialResponse">
        select t.id, t.name from `t_bcc_material` t
        where valid = 1
        <if test="name !=null and name !=''">
            and name like concat('%', #{name}, '%')
        </if>
        order by update_time desc limit 5
    </select>

</mapper>